# bash aliases and functions

#############################################
############### BASH ALIASES ################
#############################################

# deletes all local branches except for master
alias gbr='git branch | grep -v "master" | xargs git branch -D'

# undos last git commit
alias gitundo='git reset HEAD~'

# search history commands
alias h='history | grep '

# colored ls command
alias ls='ls -G '

alias gwork="cd $HOME/git/snc/"

alias gpersonal="cd $HOME/git/personal/"

alias mvn='mvn -Dfrontend.version=1.11.0 '


echo "TMP ALIAS: using mvn version to 1.11.0 for M1"
alias mvn='mvn -Dfrontend.version=1.11.0 '

alias npml='npm run lint -- --quiet'

alias chromeb="open -na Google\ Chrome --args --user-data-dir=/tmp/temporary-chrome-profile-dir --disable-web-security"

#############################################
############# ALIAS FUNCTIONS  ##############
#############################################

updatetectonic() {
    npm uninstall -g @tectonic/cli && npm i -g @tectonic/cli@$1
}

gitclean(){
   git branch | grep $1 | xargs git branch -D
}

npmv(){
    npm view $1 versions --json
}

fixdisp(){
    # dual screen fix
    #displayplacer "id:0195D6B2-AE98-2CF9-9A28-41650B865122 res:1792x1120 hz:59 color_depth:8 scaling:on origin:(0,0) degree:0" "id:6553438A-FFFF-DFBC-81E8-AEB9B810F243 res:1920x1080 hz:60 color_depth:8 scaling:off origin:(-1381,-1080) degree:0" "id:665E0375-7870-F327-516C-61A688DA9370 res:1920x1080 hz:60 color_depth:8 scaling:off origin:(539,-1080) degree:0"
    displayplacer "id:0195D6B2-AE98-2CF9-9A28-41650B865122 res:1792x1120 hz:59 color_depth:8 scaling:on origin:(0,0) degree:0" "id:665E0375-7870-F327-516C-61A688DA9370 res:1920x1080 hz:60 color_depth:8 scaling:off origin:(539,-1080) degree:0" "id:82F8671D-5410-F241-E1C4-9437B663DDCE res:1920x1080 hz:60 color_depth:8 scaling:off origin:(-1381,-1080) degree:0"
}

mvnglide(){
    cd ../glide-process-flow && mvn clean install -DskipTests && cd ../glide-flow-service && mvn clean install -DskipTests && cd ../glide-launcher && mvn clean install -DskipTests && cd ../glide && mvn clean install -DskipTests
}

## requires installation of jq
#precmd(){
#  if [ -f package.json ]
#  then
#    nodeVersion=$(jq -r '.engines.node | select(.!=null)' package.json | tr -d -c 0-9.)
#    nodeOperator=$(jq -r '.engines.node | select(.!=null)' package.json | tr -d -c \>\<\=)
#    if [ ! -z $nodeVersion ] \
#    && [[ ! $(nvm current) = "^v$nodeVersion" ]]
#    then
#      echo "found $nodeVersion in package.json engine"
#      nvm use ${nodeVersion:0:2}
#    fi
#  fi
#}
